#!/bin/bash

workspaces() {
    # Define workspace names
    ws1="1"
    ws2="2"
    ws3="3"
    ws4="4"
    ws5="5"
    ws6="6"
    ws7="7"
    ws8="8"
    ws9="9"
    ws0="0"

    icon=""
    
    # Get current focused workspace
    # current_group=$(qtile cmd-obj -o group -f current_group | tr -d '"')
    
    # Process each workspace
    for ws in "$ws1" "$ws2" "$ws3" "$ws4" "$ws5" "$ws6" "$ws7" "$ws8" "$ws9" "$ws0"; do
        ws_info=$(qtile cmd-obj -o group $ws -f info)

        # Check if workspace is occupied
        occupied=$(echo "$ws_info" | python -c "import sys, ast; d = ast.literal_eval(sys.stdin.read()); print('true' if len(d['windows']) > 0 else 'false')")
        
        # Check if workspace is current/focused
        is_current_group=$(echo "$ws_info" | python -c "import sys, ast; d = ast.literal_eval(sys.stdin.read()); print('True' if d['screen'] is not None else 'False')")

        class_prefix="empty"

        if [ "$occupied" = "true" ]; then
            class_prefix="occupied"
            icon=""
        fi
        if [[ "$is_current_group" == "True" ]]; then
            class_prefix="focused"
            icon=""
        fi
        if [ "$occupied" = "true" ] && [[ "$is_current_group" == "True" ]]; then
            class_prefix="occupied-focused"
            icon=""
        fi

        # Store the class and icon for each workspace
        if [ "$ws" = "$ws1" ]; then
            class1="$class_prefix"
            icon1="$icon"
        elif [ "$ws" = "$ws2" ]; then
            class2="$class_prefix"
            icon2="$icon"
        elif [ "$ws" = "$ws3" ]; then
            class3="$class_prefix"
            icon3="$icon"
        elif [ "$ws" = "$ws4" ]; then
            class4="$class_prefix"
            icon4="$icon"
        elif [ "$ws" = "$ws5" ]; then
            class5="$class_prefix"
            icon5="$icon"
        elif [ "$ws" = "$ws6" ]; then
            class6="$class_prefix"
            icon6="$icon"
        elif [ "$ws" = "$ws7" ]; then
            class7="$class_prefix"
            icon7="$icon"
        elif [ "$ws" = "$ws8" ]; then
            class8="$class_prefix"
            icon8="$icon"
        elif [ "$ws" = "$ws9" ]; then
            class9="$class_prefix"
            icon9="$icon"
        elif [ "$ws" = "$ws0" ]; then
            class0="$class_prefix"
            icon0="$icon"
        fi
    done
    
    # Output EWW box with more descriptive class names
    echo "(box :class \"works\" :orientation \"h\" :spacing 5 :space-evenly \"false\" \
        (button :onclick \"qtile cmd-obj -o group $ws1 -f toscreen\" :class \"$class1\" \"$icon1\") \
        (button :onclick \"qtile cmd-obj -o group $ws2 -f toscreen\" :class \"$class2\" \"$icon2\") \
        (button :onclick \"qtile cmd-obj -o group $ws3 -f toscreen\" :class \"$class3\" \"$icon3\") \
        (button :onclick \"qtile cmd-obj -o group $ws4 -f toscreen\" :class \"$class4\" \"$icon4\") \
        (button :onclick \"qtile cmd-obj -o group $ws5 -f toscreen\" :class \"$class5\" \"$icon5\") \
        (button :onclick \"qtile cmd-obj -o group $ws6 -f toscreen\" :class \"$class6\" \"$icon6\") \
        (button :onclick \"qtile cmd-obj -o group $ws7 -f toscreen\" :class \"$class7\" \"$icon7\") \
        (button :onclick \"qtile cmd-obj -o group $ws8 -f toscreen\" :class \"$class8\" \"$icon8\") \
        (button :onclick \"qtile cmd-obj -o group $ws9 -f toscreen\" :class \"$class9\" \"$icon9\") \
        (button :onclick \"qtile cmd-obj -o group $ws0 -f toscreen\" :class \"$class0\" \"$icon0\"))"
}

# # Initial output
# workspaces
#
# # Monitor for changes
while true; do
    sleep 0.5
    workspaces
done
